// bringing back the Color tag removed in ink 3.0
const c = require('chalk');

const React = require('react');

const {
  memo
} = React;

const {
  Transform
} = require('ink');

const arrify = obj => Array.isArray(obj) ? obj : obj === '' || obj === null || obj === undefined ? [] : [obj];

const methods = ['hex', 'hsl', 'hsv', 'hwb', 'rgb', 'keyword', 'bgHex', 'bgHsl', 'bgHsv', 'bgHwb', 'bgRgb', 'bgKeyword', 'ansi', 'ansi256', 'bgAnsi', 'bgAnsi256'];

const Color = ({
  children,
  ...colorProps
}) => {
  if (children === '') return null;

  const transform = children => {
    for (const [method, value] of Object.entries(colorProps)) {
      if (methods.includes(method)) children = c[method](...arrify(value))(children);else if (typeof c[method] === 'function') children = c[method](children);
    }

    return children;
  };

  return /*#__PURE__*/React.createElement(Transform, {
    transform: transform
  }, children);
};

Color.displayName = 'Color';
Color.defaultProps = {
  children: ''
};
module.exports = memo(Color);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9yLmpzIl0sIm5hbWVzIjpbImMiLCJyZXF1aXJlIiwiUmVhY3QiLCJtZW1vIiwiVHJhbnNmb3JtIiwiYXJyaWZ5Iiwib2JqIiwiQXJyYXkiLCJpc0FycmF5IiwidW5kZWZpbmVkIiwibWV0aG9kcyIsIkNvbG9yIiwiY2hpbGRyZW4iLCJjb2xvclByb3BzIiwidHJhbnNmb3JtIiwibWV0aG9kIiwidmFsdWUiLCJPYmplY3QiLCJlbnRyaWVzIiwiaW5jbHVkZXMiLCJkaXNwbGF5TmFtZSIsImRlZmF1bHRQcm9wcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsQ0FBQyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFqQjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0UsRUFBQUE7QUFBRCxJQUFTRCxLQUFmOztBQUNBLE1BQU07QUFBQ0UsRUFBQUE7QUFBRCxJQUFjSCxPQUFPLENBQUMsS0FBRCxDQUEzQjs7QUFDQSxNQUFNSSxNQUFNLEdBQUdDLEdBQUcsSUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLEdBQWQsSUFBcUJBLEdBQXJCLEdBQ2xCQSxHQUFHLEtBQUssRUFBUixJQUFjQSxHQUFHLEtBQUssSUFBdEIsSUFBOEJBLEdBQUcsS0FBS0csU0FBdEMsR0FBa0QsRUFBbEQsR0FDQSxDQUFDSCxHQUFELENBRko7O0FBSUEsTUFBTUksT0FBTyxHQUFHLENBQ2QsS0FEYyxFQUVkLEtBRmMsRUFHZCxLQUhjLEVBSWQsS0FKYyxFQUtkLEtBTGMsRUFNZCxTQU5jLEVBT2QsT0FQYyxFQVFkLE9BUmMsRUFTZCxPQVRjLEVBVWQsT0FWYyxFQVdkLE9BWGMsRUFZZCxXQVpjLEVBYWQsTUFiYyxFQWNkLFNBZGMsRUFlZCxRQWZjLEVBZ0JkLFdBaEJjLENBQWhCOztBQW1CQSxNQUFNQyxLQUFLLEdBQUcsQ0FBQztBQUFDQyxFQUFBQSxRQUFEO0FBQVcsS0FBR0M7QUFBZCxDQUFELEtBQStCO0FBQzNDLE1BQUlELFFBQVEsS0FBSyxFQUFqQixFQUNFLE9BQU8sSUFBUDs7QUFFRixRQUFNRSxTQUFTLEdBQUdGLFFBQVEsSUFBSTtBQUM1QixTQUFLLE1BQU0sQ0FBQ0csTUFBRCxFQUFTQyxLQUFULENBQVgsSUFBOEJDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlTCxVQUFmLENBQTlCLEVBQTBEO0FBQ3hELFVBQUlILE9BQU8sQ0FBQ1MsUUFBUixDQUFpQkosTUFBakIsQ0FBSixFQUNFSCxRQUFRLEdBQUdaLENBQUMsQ0FBQ2UsTUFBRCxDQUFELENBQVUsR0FBR1YsTUFBTSxDQUFDVyxLQUFELENBQW5CLEVBQTRCSixRQUE1QixDQUFYLENBREYsS0FFSyxJQUFJLE9BQU9aLENBQUMsQ0FBQ2UsTUFBRCxDQUFSLEtBQXFCLFVBQXpCLEVBQ0hILFFBQVEsR0FBR1osQ0FBQyxDQUFDZSxNQUFELENBQUQsQ0FBVUgsUUFBVixDQUFYO0FBQ0g7O0FBQ0QsV0FBT0EsUUFBUDtBQUNELEdBUkQ7O0FBVUEsc0JBQVEsb0JBQUMsU0FBRDtBQUFXLElBQUEsU0FBUyxFQUFFRTtBQUF0QixLQUFrQ0YsUUFBbEMsQ0FBUjtBQUNELENBZkQ7O0FBZ0JBRCxLQUFLLENBQUNTLFdBQU4sR0FBb0IsT0FBcEI7QUFFQVQsS0FBSyxDQUFDVSxZQUFOLEdBQXFCO0FBQUVULEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXJCO0FBRUFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLElBQUksQ0FBQ1EsS0FBRCxDQUFyQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIGJyaW5naW5nIGJhY2sgdGhlIENvbG9yIHRhZyByZW1vdmVkIGluIGluayAzLjBcbmNvbnN0IGMgPSByZXF1aXJlKCdjaGFsaycpXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0JylcbmNvbnN0IHttZW1vfSA9IFJlYWN0XG5jb25zdCB7VHJhbnNmb3JtfSA9IHJlcXVpcmUoJ2luaycpXG5jb25zdCBhcnJpZnkgPSBvYmogPT4gQXJyYXkuaXNBcnJheShvYmopID8gb2JqXG4gIDogb2JqID09PSAnJyB8fCBvYmogPT09IG51bGwgfHwgb2JqID09PSB1bmRlZmluZWQgPyBbXVxuICA6IFtvYmpdXG5cbmNvbnN0IG1ldGhvZHMgPSBbXG4gICdoZXgnLFxuICAnaHNsJyxcbiAgJ2hzdicsXG4gICdod2InLFxuICAncmdiJyxcbiAgJ2tleXdvcmQnLFxuICAnYmdIZXgnLFxuICAnYmdIc2wnLFxuICAnYmdIc3YnLFxuICAnYmdId2InLFxuICAnYmdSZ2InLFxuICAnYmdLZXl3b3JkJyxcbiAgJ2Fuc2knLFxuICAnYW5zaTI1NicsXG4gICdiZ0Fuc2knLFxuICAnYmdBbnNpMjU2Jyxcbl1cblxuY29uc3QgQ29sb3IgPSAoe2NoaWxkcmVuLCAuLi5jb2xvclByb3BzfSkgPT4ge1xuICBpZiAoY2hpbGRyZW4gPT09ICcnKVxuICAgIHJldHVybiBudWxsXG5cbiAgY29uc3QgdHJhbnNmb3JtID0gY2hpbGRyZW4gPT4ge1xuICAgIGZvciAoY29uc3QgW21ldGhvZCwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGNvbG9yUHJvcHMpKSB7XG4gICAgICBpZiAobWV0aG9kcy5pbmNsdWRlcyhtZXRob2QpKVxuICAgICAgICBjaGlsZHJlbiA9IGNbbWV0aG9kXSguLi5hcnJpZnkodmFsdWUpKShjaGlsZHJlbilcbiAgICAgIGVsc2UgaWYgKHR5cGVvZiBjW21ldGhvZF0gPT09ICdmdW5jdGlvbicpXG4gICAgICAgIGNoaWxkcmVuID0gY1ttZXRob2RdKGNoaWxkcmVuKVxuICAgIH1cbiAgICByZXR1cm4gY2hpbGRyZW5cbiAgfVxuXG4gIHJldHVybiAoPFRyYW5zZm9ybSB0cmFuc2Zvcm09e3RyYW5zZm9ybX0+e2NoaWxkcmVufTwvVHJhbnNmb3JtPilcbn1cbkNvbG9yLmRpc3BsYXlOYW1lID0gJ0NvbG9yJ1xuXG5Db2xvci5kZWZhdWx0UHJvcHMgPSB7IGNoaWxkcmVuOiAnJyB9XG5cbm1vZHVsZS5leHBvcnRzID0gbWVtbyhDb2xvcilcbiJdfQ==