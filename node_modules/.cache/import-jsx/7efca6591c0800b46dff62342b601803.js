const React = require('react');

const {
  Box,
  Text
} = require('ink');

const importJSX = require('@isaacs/import-jsx');

const Color = importJSX('../../color.js');
const Reset = importJSX('../../reset.js');

const pending = () => /*#__PURE__*/React.createElement(Color, {
  hex: "#000",
  bgYellow: true,
  bold: true
}, /*#__PURE__*/React.createElement(Text, null, ' RUNS '));

const fail = () => /*#__PURE__*/React.createElement(Color, {
  hex: "#fff",
  bgRed: true,
  bold: true
}, /*#__PURE__*/React.createElement(Text, null, ' FAIL '));

const skip = () => /*#__PURE__*/React.createElement(Color, {
  bgBlue: true,
  rgb: [255, 255, 255],
  bold: true
}, /*#__PURE__*/React.createElement(Text, null, ' SKIP '));

const todo = () => /*#__PURE__*/React.createElement(Color, {
  bold: true,
  bgRgb: [127, 0, 127],
  rgb: [255, 255, 255]
}, /*#__PURE__*/React.createElement(Text, null, ' TODO '));

const pass = () => /*#__PURE__*/React.createElement(Color, {
  bgGreen: true,
  rgb: [0, 0, 0],
  bold: true
}, /*#__PURE__*/React.createElement(Text, null, ' PASS '));

module.exports = ({
  test,
  res
}) => /*#__PURE__*/React.createElement(Reset, null, test ? !test.results ? pending() : !test.results.ok ? fail() : test.options.skip || test.counts.skip > test.counts.todo ? skip() : test.options.todo || test.counts.todo ? todo() : pass() : res ? res.skip ? skip() : res.todo ? todo() : !res.ok ? fail() : pass() : /*#__PURE__*/React.createElement(Text, null));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXR1cy1tYXJrLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIkJveCIsIlRleHQiLCJpbXBvcnRKU1giLCJDb2xvciIsIlJlc2V0IiwicGVuZGluZyIsImZhaWwiLCJza2lwIiwidG9kbyIsInBhc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsInJlcyIsInJlc3VsdHMiLCJvayIsIm9wdGlvbnMiLCJjb3VudHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFDQyxFQUFBQSxHQUFEO0FBQU1DLEVBQUFBO0FBQU4sSUFBY0YsT0FBTyxDQUFDLEtBQUQsQ0FBM0I7O0FBQ0EsTUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTUksS0FBSyxHQUFHRCxTQUFTLENBQUMsZ0JBQUQsQ0FBdkI7QUFDQSxNQUFNRSxLQUFLLEdBQUdGLFNBQVMsQ0FBQyxnQkFBRCxDQUF2Qjs7QUFFQSxNQUFNRyxPQUFPLEdBQUcsbUJBQU8sb0JBQUMsS0FBRDtBQUFPLEVBQUEsR0FBRyxFQUFDLE1BQVg7QUFBa0IsRUFBQSxRQUFRLE1BQTFCO0FBQTJCLEVBQUEsSUFBSTtBQUEvQixnQkFBZ0Msb0JBQUMsSUFBRCxRQUFPLFFBQVAsQ0FBaEMsQ0FBdkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHLG1CQUFPLG9CQUFDLEtBQUQ7QUFBTyxFQUFBLEdBQUcsRUFBQyxNQUFYO0FBQWtCLEVBQUEsS0FBSyxNQUF2QjtBQUF3QixFQUFBLElBQUk7QUFBNUIsZ0JBQTZCLG9CQUFDLElBQUQsUUFBTyxRQUFQLENBQTdCLENBQXBCOztBQUNBLE1BQU1DLElBQUksR0FBRyxtQkFBTyxvQkFBQyxLQUFEO0FBQU8sRUFBQSxNQUFNLE1BQWI7QUFBYyxFQUFBLEdBQUcsRUFBRSxDQUFDLEdBQUQsRUFBSyxHQUFMLEVBQVMsR0FBVCxDQUFuQjtBQUFrQyxFQUFBLElBQUk7QUFBdEMsZ0JBQXVDLG9CQUFDLElBQUQsUUFBTyxRQUFQLENBQXZDLENBQXBCOztBQUNBLE1BQU1DLElBQUksR0FBRyxtQkFBTyxvQkFBQyxLQUFEO0FBQU8sRUFBQSxJQUFJLE1BQVg7QUFBWSxFQUFBLEtBQUssRUFBRSxDQUFDLEdBQUQsRUFBSyxDQUFMLEVBQU8sR0FBUCxDQUFuQjtBQUFnQyxFQUFBLEdBQUcsRUFBRSxDQUFDLEdBQUQsRUFBSyxHQUFMLEVBQVMsR0FBVDtBQUFyQyxnQkFBb0Qsb0JBQUMsSUFBRCxRQUFPLFFBQVAsQ0FBcEQsQ0FBcEI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHLG1CQUFPLG9CQUFDLEtBQUQ7QUFBTyxFQUFBLE9BQU8sTUFBZDtBQUFlLEVBQUEsR0FBRyxFQUFFLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBQXBCO0FBQTZCLEVBQUEsSUFBSTtBQUFqQyxnQkFBa0Msb0JBQUMsSUFBRCxRQUFPLFFBQVAsQ0FBbEMsQ0FBcEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDO0FBQUNDLEVBQUFBLElBQUQ7QUFBT0MsRUFBQUE7QUFBUCxDQUFELGtCQUFpQixvQkFBQyxLQUFELFFBQ2hDRCxJQUFJLEdBQ0YsQ0FBQ0EsSUFBSSxDQUFDRSxPQUFOLEdBQWdCVCxPQUFPLEVBQXZCLEdBQ0UsQ0FBQ08sSUFBSSxDQUFDRSxPQUFMLENBQWFDLEVBQWQsR0FBbUJULElBQUksRUFBdkIsR0FDQU0sSUFBSSxDQUFDSSxPQUFMLENBQWFULElBQWIsSUFBcUJLLElBQUksQ0FBQ0ssTUFBTCxDQUFZVixJQUFaLEdBQW1CSyxJQUFJLENBQUNLLE1BQUwsQ0FBWVQsSUFBcEQsR0FBMkRELElBQUksRUFBL0QsR0FDQUssSUFBSSxDQUFDSSxPQUFMLENBQWFSLElBQWIsSUFBcUJJLElBQUksQ0FBQ0ssTUFBTCxDQUFZVCxJQUFqQyxHQUF3Q0EsSUFBSSxFQUE1QyxHQUNBQyxJQUFJLEVBTEosR0FNQUksR0FBRyxHQUNMQSxHQUFHLENBQUNOLElBQUosR0FBV0EsSUFBSSxFQUFmLEdBQ0VNLEdBQUcsQ0FBQ0wsSUFBSixHQUFXQSxJQUFJLEVBQWYsR0FDQSxDQUFDSyxHQUFHLENBQUNFLEVBQUwsR0FBVVQsSUFBSSxFQUFkLEdBQ0FHLElBQUksRUFKRCxnQkFLSCxvQkFBQyxJQUFELE9BWjRCLENBQWxDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpXG5jb25zdCB7Qm94LCBUZXh0fSA9IHJlcXVpcmUoJ2luaycpXG5jb25zdCBpbXBvcnRKU1ggPSByZXF1aXJlKCdAaXNhYWNzL2ltcG9ydC1qc3gnKVxuY29uc3QgQ29sb3IgPSBpbXBvcnRKU1goJy4uLy4uL2NvbG9yLmpzJylcbmNvbnN0IFJlc2V0ID0gaW1wb3J0SlNYKCcuLi8uLi9yZXNldC5qcycpXG5cbmNvbnN0IHBlbmRpbmcgPSAoKSA9PiAoPENvbG9yIGhleD0nIzAwMCcgYmdZZWxsb3cgYm9sZD48VGV4dD57JyBSVU5TICd9PC9UZXh0PjwvQ29sb3I+KVxuY29uc3QgZmFpbCA9ICgpID0+ICg8Q29sb3IgaGV4PScjZmZmJyBiZ1JlZCBib2xkPjxUZXh0PnsnIEZBSUwgJ308L1RleHQ+PC9Db2xvcj4pXG5jb25zdCBza2lwID0gKCkgPT4gKDxDb2xvciBiZ0JsdWUgcmdiPXtbMjU1LDI1NSwyNTVdfSBib2xkPjxUZXh0PnsnIFNLSVAgJ308L1RleHQ+PC9Db2xvcj4pXG5jb25zdCB0b2RvID0gKCkgPT4gKDxDb2xvciBib2xkIGJnUmdiPXtbMTI3LDAsMTI3XX0gcmdiPXtbMjU1LDI1NSwyNTVdfT48VGV4dD57JyBUT0RPICd9PC9UZXh0PjwvQ29sb3I+KVxuY29uc3QgcGFzcyA9ICgpID0+ICg8Q29sb3IgYmdHcmVlbiByZ2I9e1swLDAsMF19IGJvbGQ+PFRleHQ+eycgUEFTUyAnfTwvVGV4dD48L0NvbG9yPilcblxubW9kdWxlLmV4cG9ydHMgPSAoe3Rlc3QsIHJlc30pID0+IDxSZXNldD57XG4gIHRlc3QgPyAoXG4gICAgIXRlc3QucmVzdWx0cyA/IHBlbmRpbmcoKVxuICAgIDogIXRlc3QucmVzdWx0cy5vayA/IGZhaWwoKVxuICAgIDogdGVzdC5vcHRpb25zLnNraXAgfHwgdGVzdC5jb3VudHMuc2tpcCA+IHRlc3QuY291bnRzLnRvZG8gPyBza2lwKClcbiAgICA6IHRlc3Qub3B0aW9ucy50b2RvIHx8IHRlc3QuY291bnRzLnRvZG8gPyB0b2RvKClcbiAgICA6IHBhc3MoKVxuICApIDogcmVzID8gKFxuICAgIHJlcy5za2lwID8gc2tpcCgpXG4gICAgOiByZXMudG9kbyA/IHRvZG8oKVxuICAgIDogIXJlcy5vayA/IGZhaWwoKVxuICAgIDogcGFzcygpXG4gICkgOiA8VGV4dD48L1RleHQ+XG59PC9SZXNldD5cbiJdfQ==