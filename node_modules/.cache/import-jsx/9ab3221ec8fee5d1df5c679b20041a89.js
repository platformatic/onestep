const React = require('react');

const ms = require('ms');

const {
  Box,
  Text
} = require('ink');

const importJSX = require('@isaacs/import-jsx');

const Test = importJSX('./test.js');

const chalk = require('chalk');

const Reset = importJSX('../../reset.js');

const s = n => new Array(n + 1).join(' ');

const bannerWords = '  ðŸŒˆ SUMMARY RESULTS ðŸŒˆ  ';
const banner = '\n' + chalk.bgHex('#fff')(s(bannerWords.length)) + '\n' + chalk.bgHex('#fff')(chalk.hex('#333')(chalk.bold(bannerWords))) + '\n' + chalk.bgHex('#fff')(s(bannerWords.length));

module.exports = ({
  results,
  tests
}) => /*#__PURE__*/React.createElement(Reset, null, /*#__PURE__*/React.createElement(Box, {
  flexDirection: "column"
}, /*#__PURE__*/React.createElement(Text, null, banner), /*#__PURE__*/React.createElement(Box, {
  flexDirection: "column"
}, tests.filter(t => t.results && !t.results.ok || t.options.skip || t.options.todo || t.counts.total !== t.counts.pass).sort((a, b) => a.name.localeCompare(b.name, 'en')).map((test, i) => /*#__PURE__*/React.createElement(Test, {
  test: test,
  key: '' + i
})))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1bW1hcnkuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwibXMiLCJCb3giLCJUZXh0IiwiaW1wb3J0SlNYIiwiVGVzdCIsImNoYWxrIiwiUmVzZXQiLCJzIiwibiIsIkFycmF5Iiwiam9pbiIsImJhbm5lcldvcmRzIiwiYmFubmVyIiwiYmdIZXgiLCJsZW5ndGgiLCJoZXgiLCJib2xkIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlc3VsdHMiLCJ0ZXN0cyIsImZpbHRlciIsInQiLCJvayIsIm9wdGlvbnMiLCJza2lwIiwidG9kbyIsImNvdW50cyIsInRvdGFsIiwicGFzcyIsInNvcnQiLCJhIiwiYiIsIm5hbWUiLCJsb2NhbGVDb21wYXJlIiwibWFwIiwidGVzdCIsImkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNO0FBQUNFLEVBQUFBLEdBQUQ7QUFBTUMsRUFBQUE7QUFBTixJQUFjSCxPQUFPLENBQUMsS0FBRCxDQUEzQjs7QUFDQSxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxvQkFBRCxDQUF6Qjs7QUFDQSxNQUFNSyxJQUFJLEdBQUdELFNBQVMsQ0FBQyxXQUFELENBQXRCOztBQUNBLE1BQU1FLEtBQUssR0FBR04sT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTU8sS0FBSyxHQUFHSCxTQUFTLENBQUMsZ0JBQUQsQ0FBdkI7O0FBRUEsTUFBTUksQ0FBQyxHQUFHQyxDQUFDLElBQUksSUFBSUMsS0FBSixDQUFVRCxDQUFDLEdBQUcsQ0FBZCxFQUFpQkUsSUFBakIsQ0FBc0IsR0FBdEIsQ0FBZjs7QUFFQSxNQUFNQyxXQUFXLEdBQUcsMkJBQXBCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLE9BQ2JQLEtBQUssQ0FBQ1EsS0FBTixDQUFZLE1BQVosRUFBb0JOLENBQUMsQ0FBQ0ksV0FBVyxDQUFDRyxNQUFiLENBQXJCLENBRGEsR0FFYixJQUZhLEdBR2JULEtBQUssQ0FBQ1EsS0FBTixDQUFZLE1BQVosRUFBb0JSLEtBQUssQ0FBQ1UsR0FBTixDQUFVLE1BQVYsRUFBa0JWLEtBQUssQ0FBQ1csSUFBTixDQUFXTCxXQUFYLENBQWxCLENBQXBCLENBSGEsR0FJYixJQUphLEdBS2JOLEtBQUssQ0FBQ1EsS0FBTixDQUFZLE1BQVosRUFBb0JOLENBQUMsQ0FBQ0ksV0FBVyxDQUFDRyxNQUFiLENBQXJCLENBTEY7O0FBT0FHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDO0FBQUVDLEVBQUFBLE9BQUY7QUFBV0MsRUFBQUE7QUFBWCxDQUFELGtCQUF5QixvQkFBQyxLQUFELHFCQUFPLG9CQUFDLEdBQUQ7QUFBSyxFQUFBLGFBQWEsRUFBQztBQUFuQixnQkFDL0Msb0JBQUMsSUFBRCxRQUFPUixNQUFQLENBRCtDLGVBRS9DLG9CQUFDLEdBQUQ7QUFBSyxFQUFBLGFBQWEsRUFBQztBQUFuQixHQUVJUSxLQUFLLENBQ0ZDLE1BREgsQ0FDVUMsQ0FBQyxJQUFJQSxDQUFDLENBQUNILE9BQUYsSUFBYSxDQUFDRyxDQUFDLENBQUNILE9BQUYsQ0FBVUksRUFBeEIsSUFDVEQsQ0FBQyxDQUFDRSxPQUFGLENBQVVDLElBREQsSUFDU0gsQ0FBQyxDQUFDRSxPQUFGLENBQVVFLElBRG5CLElBRVRKLENBQUMsQ0FBQ0ssTUFBRixDQUFTQyxLQUFULEtBQW1CTixDQUFDLENBQUNLLE1BQUYsQ0FBU0UsSUFIbEMsRUFJR0MsSUFKSCxDQUlRLENBQUNDLENBQUQsRUFBSUMsQ0FBSixLQUFVRCxDQUFDLENBQUNFLElBQUYsQ0FBT0MsYUFBUCxDQUFxQkYsQ0FBQyxDQUFDQyxJQUF2QixFQUE2QixJQUE3QixDQUpsQixFQUtHRSxHQUxILENBS08sQ0FBQ0MsSUFBRCxFQUFPQyxDQUFQLGtCQUFjLG9CQUFDLElBQUQ7QUFBTSxFQUFBLElBQUksRUFBRUQsSUFBWjtBQUFrQixFQUFBLEdBQUcsRUFBRSxLQUFHQztBQUExQixFQUxyQixDQUZKLENBRitDLENBQVAsQ0FBMUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0JylcbmNvbnN0IG1zID0gcmVxdWlyZSgnbXMnKVxuY29uc3Qge0JveCwgVGV4dH0gPSByZXF1aXJlKCdpbmsnKVxuY29uc3QgaW1wb3J0SlNYID0gcmVxdWlyZSgnQGlzYWFjcy9pbXBvcnQtanN4JylcbmNvbnN0IFRlc3QgPSBpbXBvcnRKU1goJy4vdGVzdC5qcycpXG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJylcbmNvbnN0IFJlc2V0ID0gaW1wb3J0SlNYKCcuLi8uLi9yZXNldC5qcycpXG5cbmNvbnN0IHMgPSBuID0+IG5ldyBBcnJheShuICsgMSkuam9pbignICcpXG5cbmNvbnN0IGJhbm5lcldvcmRzID0gJyAg8J+MiCBTVU1NQVJZIFJFU1VMVFMg8J+MiCAgJ1xuY29uc3QgYmFubmVyID0gJ1xcbicgK1xuICBjaGFsay5iZ0hleCgnI2ZmZicpKHMoYmFubmVyV29yZHMubGVuZ3RoKSkgK1xuICAnXFxuJyArXG4gIGNoYWxrLmJnSGV4KCcjZmZmJykoY2hhbGsuaGV4KCcjMzMzJykoY2hhbGsuYm9sZChiYW5uZXJXb3JkcykpKSArXG4gICdcXG4nICtcbiAgY2hhbGsuYmdIZXgoJyNmZmYnKShzKGJhbm5lcldvcmRzLmxlbmd0aCkpXG5cbm1vZHVsZS5leHBvcnRzID0gKHsgcmVzdWx0cywgdGVzdHMgfSkgPT4gKDxSZXNldD48Qm94IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cbiAgPFRleHQ+e2Jhbm5lcn08L1RleHQ+XG4gIDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiPlxuICAgIHtcbiAgICAgIHRlc3RzXG4gICAgICAgIC5maWx0ZXIodCA9PiB0LnJlc3VsdHMgJiYgIXQucmVzdWx0cy5vayB8fFxuICAgICAgICAgICAgdC5vcHRpb25zLnNraXAgfHwgdC5vcHRpb25zLnRvZG8gfHxcbiAgICAgICAgICAgIHQuY291bnRzLnRvdGFsICE9PSB0LmNvdW50cy5wYXNzKVxuICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5uYW1lLmxvY2FsZUNvbXBhcmUoYi5uYW1lLCAnZW4nKSlcbiAgICAgICAgLm1hcCgodGVzdCwgaSkgPT4gKDxUZXN0IHRlc3Q9e3Rlc3R9IGtleT17JycraX0gLz4pKVxuICAgIH1cbiAgPC9Cb3g+XG48L0JveD48L1Jlc2V0PilcbiJdfQ==