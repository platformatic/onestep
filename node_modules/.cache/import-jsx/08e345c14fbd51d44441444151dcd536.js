const React = require('react');

const {
  render
} = require('ink');

const importJSX = require('@isaacs/import-jsx');
/* istanbul ignore next */


const reporter = {
  report(tap, Type = 'base') {
    // NB: React will only render as a tag if it's capitalized
    if (typeof Type === 'function' && Type.prototype.isReactComponent) return render( /*#__PURE__*/React.createElement(Type, {
      tap: tap
    }));
    if (typeof Type !== 'string' || !types.includes(Type)) throw new Error('unsupported report type: ' + Type);
    const Report = importJSX('./reports/' + Type);
    render( /*#__PURE__*/React.createElement(Report, {
      tap: tap
    }));
  }

};
/* istanbul ignore next */

module.exports = (...args) => reporter.report(...args);

const types = module.exports.types = require('../types.js');

const cap = s => s.replace(/^./, $0 => $0.toUpperCase());

types.forEach(type => Object.defineProperty(module.exports, cap(type), {
  get: () => importJSX(`./reports/${type}`),
  enumerable: true
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsImltcG9ydEpTWCIsInJlcG9ydGVyIiwicmVwb3J0IiwidGFwIiwiVHlwZSIsInByb3RvdHlwZSIsImlzUmVhY3RDb21wb25lbnQiLCJ0eXBlcyIsImluY2x1ZGVzIiwiRXJyb3IiLCJSZXBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXJncyIsImNhcCIsInMiLCJyZXBsYWNlIiwiJDAiLCJ0b1VwcGVyQ2FzZSIsImZvckVhY2giLCJ0eXBlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJlbnVtZXJhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUE7QUFBRCxJQUFXRCxPQUFPLENBQUMsS0FBRCxDQUF4Qjs7QUFDQSxNQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxvQkFBRCxDQUF6QjtBQUNBOzs7QUFDQSxNQUFNRyxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsTUFBTSxDQUFFQyxHQUFGLEVBQU9DLElBQUksR0FBRyxNQUFkLEVBQXNCO0FBQzFCO0FBQ0EsUUFBSSxPQUFPQSxJQUFQLEtBQWdCLFVBQWhCLElBQThCQSxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsZ0JBQWpELEVBQ0UsT0FBT1AsTUFBTSxlQUFDLG9CQUFDLElBQUQ7QUFBTSxNQUFBLEdBQUcsRUFBRUk7QUFBWCxNQUFELENBQWI7QUFFRixRQUFJLE9BQU9DLElBQVAsS0FBZ0IsUUFBaEIsSUFBNEIsQ0FBQ0csS0FBSyxDQUFDQyxRQUFOLENBQWVKLElBQWYsQ0FBakMsRUFDRSxNQUFNLElBQUlLLEtBQUosQ0FBVSw4QkFBOEJMLElBQXhDLENBQU47QUFFRixVQUFNTSxNQUFNLEdBQUdWLFNBQVMsQ0FBQyxlQUFlSSxJQUFoQixDQUF4QjtBQUNBTCxJQUFBQSxNQUFNLGVBQUMsb0JBQUMsTUFBRDtBQUFRLE1BQUEsR0FBRyxFQUFFSTtBQUFiLE1BQUQsQ0FBTjtBQUNEOztBQVhjLENBQWpCO0FBY0E7O0FBQ0FRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDLEdBQUdDLElBQUosS0FBYVosUUFBUSxDQUFDQyxNQUFULENBQWdCLEdBQUdXLElBQW5CLENBQTlCOztBQUVBLE1BQU1OLEtBQUssR0FBR0ksTUFBTSxDQUFDQyxPQUFQLENBQWVMLEtBQWYsR0FBdUJULE9BQU8sQ0FBQyxhQUFELENBQTVDOztBQUNBLE1BQU1nQixHQUFHLEdBQUdDLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxPQUFGLENBQVUsSUFBVixFQUFnQkMsRUFBRSxJQUFJQSxFQUFFLENBQUNDLFdBQUgsRUFBdEIsQ0FBakI7O0FBQ0FYLEtBQUssQ0FBQ1ksT0FBTixDQUFjQyxJQUFJLElBQ2hCQyxNQUFNLENBQUNDLGNBQVAsQ0FBc0JYLE1BQU0sQ0FBQ0MsT0FBN0IsRUFBc0NFLEdBQUcsQ0FBQ00sSUFBRCxDQUF6QyxFQUFpRDtBQUMvQ0csRUFBQUEsR0FBRyxFQUFFLE1BQU12QixTQUFTLENBQUUsYUFBWW9CLElBQUssRUFBbkIsQ0FEMkI7QUFFL0NJLEVBQUFBLFVBQVUsRUFBRTtBQUZtQyxDQUFqRCxDQURGIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpXG5jb25zdCB7cmVuZGVyfSA9IHJlcXVpcmUoJ2luaycpXG5jb25zdCBpbXBvcnRKU1ggPSByZXF1aXJlKCdAaXNhYWNzL2ltcG9ydC1qc3gnKVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmNvbnN0IHJlcG9ydGVyID0ge1xuICByZXBvcnQgKHRhcCwgVHlwZSA9ICdiYXNlJykge1xuICAgIC8vIE5COiBSZWFjdCB3aWxsIG9ubHkgcmVuZGVyIGFzIGEgdGFnIGlmIGl0J3MgY2FwaXRhbGl6ZWRcbiAgICBpZiAodHlwZW9mIFR5cGUgPT09ICdmdW5jdGlvbicgJiYgVHlwZS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudClcbiAgICAgIHJldHVybiByZW5kZXIoPFR5cGUgdGFwPXt0YXB9IC8+KVxuXG4gICAgaWYgKHR5cGVvZiBUeXBlICE9PSAnc3RyaW5nJyB8fCAhdHlwZXMuaW5jbHVkZXMoVHlwZSkpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Vuc3VwcG9ydGVkIHJlcG9ydCB0eXBlOiAnICsgVHlwZSlcblxuICAgIGNvbnN0IFJlcG9ydCA9IGltcG9ydEpTWCgnLi9yZXBvcnRzLycgKyBUeXBlKVxuICAgIHJlbmRlcig8UmVwb3J0IHRhcD17dGFwfSAvPilcbiAgfVxufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xubW9kdWxlLmV4cG9ydHMgPSAoLi4uYXJncykgPT4gcmVwb3J0ZXIucmVwb3J0KC4uLmFyZ3MpXG5cbmNvbnN0IHR5cGVzID0gbW9kdWxlLmV4cG9ydHMudHlwZXMgPSByZXF1aXJlKCcuLi90eXBlcy5qcycpXG5jb25zdCBjYXAgPSBzID0+IHMucmVwbGFjZSgvXi4vLCAkMCA9PiAkMC50b1VwcGVyQ2FzZSgpKVxudHlwZXMuZm9yRWFjaCh0eXBlID0+XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUuZXhwb3J0cywgY2FwKHR5cGUpLCB7XG4gICAgZ2V0OiAoKSA9PiBpbXBvcnRKU1goYC4vcmVwb3J0cy8ke3R5cGV9YCksXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgfSkpXG4iXX0=