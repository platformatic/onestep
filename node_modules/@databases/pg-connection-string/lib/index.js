"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const Configuration_1 = require("./Configuration");

const parseConnectionURI_1 = require("./parseConnectionURI");

exports.parseConnectionURI = parseConnectionURI_1.default;
exports.isConnectionURI = parseConnectionURI_1.isConnectionURI;

const parseKeywordValueConnectionString_1 = require("./parseKeywordValueConnectionString");

exports.parseKeywordValueConnectionString = parseKeywordValueConnectionString_1.default;
exports.isKeywordValueConnectionString = parseKeywordValueConnectionString_1.isKeywordValueConnectionString;

function parseConnectionString(str, {
  invalidOptionMode = 'error',
  unrecognisedOptionMode = 'warn',
  env = process.env
} = {}) {
  if (str === undefined) {
    return new Configuration_1.ConfigurationBuilder({
      invalidOptionMode,
      unrecognisedOptionMode,
      env
    }).getConfig();
  }

  if (parseConnectionURI_1.isConnectionURI(str)) {
    return parseConnectionURI_1.default(str, {
      invalidOptionMode,
      unrecognisedOptionMode,
      env
    });
  }

  if (parseKeywordValueConnectionString_1.isKeywordValueConnectionString(str)) {
    return parseKeywordValueConnectionString_1.default(str, {
      invalidOptionMode,
      unrecognisedOptionMode,
      env
    });
  }

  throw new Error(`Expected either a Connection URI, starting with "postgresql://" or "postgres://" or a Keyword/Value Connection String. See https://www.postgresql.org/docs/13/libpq-connect.html for examples.`);
}

exports.default = parseConnectionString;
module.exports = Object.assign(parseConnectionString, {
  default: parseConnectionString,
  parseConnectionURI: parseConnectionURI_1.default,
  isConnectionURI: parseConnectionURI_1.isConnectionURI,
  parseKeywordValueConnectionString: parseKeywordValueConnectionString_1.default,
  isKeywordValueConnectionString: parseKeywordValueConnectionString_1.isKeywordValueConnectionString
});