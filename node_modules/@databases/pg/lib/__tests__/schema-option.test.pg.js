"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const sql_1 = require("@databases/sql");
jest.setTimeout(30000);
const db = (0, __1.default)({
    bigIntMode: 'number',
    schema: 'my_custom_schema_to_test_default_schema_option',
});
afterAll(async () => {
    await db.dispose();
});
test('bigint', async () => {
    await db.query((0, sql_1.default) `CREATE SCHEMA my_custom_schema_to_test_default_schema_option`);
    await db.query((0, sql_1.default) `CREATE TABLE my_custom_schema_to_test_default_schema_option.values (id INT NOT NULL PRIMARY KEY);`);
    await db.query((0, sql_1.default) `
    INSERT INTO values (id)
    VALUES (1),
           (2),
           (42);
  `);
    const result = await db.query((0, sql_1.default) `SELECT id from values;`);
    expect(result).toEqual([{ id: 1 }, { id: 2 }, { id: 42 }]);
});
//# sourceMappingURL=schema-option.test.pg.js.map